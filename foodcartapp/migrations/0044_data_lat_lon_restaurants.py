# Generated by Django 3.2.15 on 2023-01-11 19:08
import requests

from environs import Env
from django.db import migrations


def fetch_coordinates(apikey: str, address: str):
    base_url = "https://geocode-maps.yandex.ru/1.x"
    response = requests.get(base_url, params={
        "geocode": address,
        "apikey": apikey,
        "format": "json",
    })
    response.raise_for_status()
    found_places = response.json()['response']['GeoObjectCollection']['featureMember']

    if not found_places:
        return None

    most_relevant = found_places[0]
    lon, lat = most_relevant['GeoObject']['Point']['pos'].split(" ")

    return lat, lon


def add_lat_lon_coordinates(apps, schema_editor):
    env = Env()
    env.read_env()
    yandex_api = env.str('YANDEX_GEO_API')
    Restaurant = apps.get_model('foodcartapp', 'Restaurant')
    for restaurant in Restaurant.objects.iterator():
        lat, lon = fetch_coordinates(yandex_api, restaurant.address)
        restaurant.lat = lat
        restaurant.lon = lon
        restaurant.save()


def rollback(apps, schema_editor):
    Restaurant = apps.get_model('foodcartapp', 'Restaurant')
    for restaurant in Restaurant.objects.iterator():
        restaurant.lat = None
        restaurant.lon = None
        restaurant.save()


class Migration(migrations.Migration):
    dependencies = [
        ('foodcartapp', '0043_auto_20230111_1906'),
    ]

    operations = [
        migrations.RunPython(add_lat_lon_coordinates, rollback),
    ]
