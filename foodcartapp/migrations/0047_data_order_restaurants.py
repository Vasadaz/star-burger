# Generated by Django 3.2.15 on 2023-01-13 19:43
import requests

from django.db import migrations
from environs import Env
from geopy import distance


def add_restaurants_to_order(apps, schema_editor):
    env = Env()
    env.read_env()
    yandex_api = env.str('YANDEX_GEO_API')

    Order = apps.get_model('foodcartapp', 'Order')
    Restaurant = apps.get_model('foodcartapp', 'Restaurant')

    for order in Order.objects.iterator():
        client_coordinates = fetch_coordinates(yandex_api, order.address)

        for restaurant in Restaurant.objects.iterator():
            order.restaurants.add(
                restaurant,
                through_defaults={
                    'distance_to_client': distance.distance((restaurant.lat, restaurant.lon), client_coordinates).m,
                }
            )


def fetch_coordinates(apikey: str, address: str):
    base_url = "https://geocode-maps.yandex.ru/1.x"
    response = requests.get(base_url, params={
        "geocode": address,
        "apikey": apikey,
        "format": "json",
    })
    response.raise_for_status()
    found_places = response.json()['response']['GeoObjectCollection']['featureMember']

    if not found_places:
        return None

    most_relevant = found_places[0]
    lon, lat = most_relevant['GeoObject']['Point']['pos'].split(" ")

    return lat, lon


def rollback(apps, schema_editor):
    Order = apps.get_model('foodcartapp', 'Order')
    for order_kit in Order.objects.iterator():
        order_kit.restaurants.clear()


class Migration(migrations.Migration):
    dependencies = [
        ('foodcartapp', '0046_auto_20230113_1939'),
    ]

    operations = [
        migrations.RunPython(add_restaurants_to_order, rollback),
    ]
